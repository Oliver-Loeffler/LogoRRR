<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>app.logorrr</groupId>
    <artifactId>logorrr</artifactId>
    <version>${revision}${changelist}</version>
    <name>app.logorrr</name>
    <description>LogoRRR - the log visualisation tool</description>
    <packaging>pom</packaging>
    <properties>
        <revision>21.3.2</revision>
        <changelist>-SNAPSHOT</changelist>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.major.version>2.13</scala.major.version>
        <scala.version>${scala.major.version}.6</scala.version>
        <openjfx.version>17-ea+15</openjfx.version>
        <gluonfx.plugin.version>1.0.3</gluonfx.plugin.version>
        <javafx.maven.plugin.version>0.0.6</javafx.maven.plugin.version>
        <main.class>app.logorrr.LogoRRRApp</main.class>
        <main.launcher.class>app.logorrr.LogoRRRAppLauncher</main.launcher.class>
        <graalvm.log>${project.build.directory}\graal.log</graalvm.log>
    </properties>

    <profiles>
        <profile>
            <id>OS.windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <graalvm.home>C:\Program Files\Java\graalvm-ce-java11-21.2.0</graalvm.home>
                <advanced.installer.compiler>C:\Program Files (x86)\Caphyon\Advanced Installer 18.4\bin\x86\AdvancedInstaller.com</advanced.installer.compiler>
            </properties>
        </profile>
        <profile>
            <id>OS.osx</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Mac OS X</name>
                </os>
            </activation>
            <properties>
                <graalvm.home>/Users/lad/.sdkman/candidates/java/21.2.0.r11-grl</graalvm.home>
                <!-- for creating macOsX installer we need java 16 (jpackager)-->
                <jdk16.home>/Users/lad/.sdkman/candidates/java/16.0.2-zulu</jdk16.home>
                <jdk16.jlink>${jdk16.home}/bin/jlink</jdk16.jlink>
                <jdk16.jpackage>${jdk16.home}/bin/jpackage</jdk16.jpackage>
                <codesign.binary>/usr/bin/codesign</codesign.binary>
            </properties>
        </profile>
    </profiles>


    <modules>
        <module>app</module>
        <module>dist</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-swing</artifactId>
                <version>${openjfx.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.8.0</version>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.major.version}</artifactId>
                <version>3.2.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalatestplus</groupId>
                <artifactId>scalacheck-1-14_${scala.major.version}</artifactId>
                <version>3.2.3.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.scalacheck</groupId>
                <artifactId>scalacheck_${scala.major.version}</artifactId>
                <version>1.15.2</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>app.logorrr</groupId>
                <artifactId>app</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>4.5.3</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scalaVersion>${scala.version}</scalaVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>1.6.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <id>copy-meta-inf</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/src/main/resources/</directory>
                                        <filtering>false</filtering>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/classes/</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- to start application from command line and also to support gluonfx-maven-plugin's ability -->
                <!-- to activate a tracing agent via client:runagent -->
                <!-- see https://docs.oracle.com/en/graalvm/enterprise/19/guide/reference/native-image/tracing-agent.html -->
                <!-- and https://docs.gluonhq.com/#_clientrunagent -->
                <plugin>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-maven-plugin</artifactId>
                    <version>${javafx.maven.plugin.version}</version>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.gluonhq</groupId>
                    <artifactId>gluonfx-maven-plugin</artifactId>
                    <version>${gluonfx.plugin.version}</version>
                    <configuration>
                        <target>host</target>
                        <mainClass>${main.class}</mainClass>
                        <verbose>true</verbose>
                        <graalvmHome>${graalvm.home}</graalvmHome>
                        <nativeImageArgs>
                            <arg>--no-fallback</arg>
                            <arg>-H:-UseServiceLoaderFeature</arg>
                            <arg>--report-unsupported-elements-at-runtime</arg>
                            <arg>-Dgraal.LogFile=${graalvm.log}</arg>
                        </nativeImageArgs>
                    </configuration>
                    <executions>
                        <execution>
                            <id>execute-compile-and-link</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>1.2.7</version>
                    <configuration>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <configuration>
                        <skipTests>true</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>2.0.2</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <parallel>true</parallel>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version>
                    <executions>
                        <execution>
                            <id>apply-enforcer-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>initialize</phase>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>[3.6.2,)</version>
                                        <message>Check for Maven version &gt;=3.6.2 failed. Upgrade your Maven
                                            installation.
                                        </message>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>11</version>
                                        <message>JDK 11 is necessary to execute build, download here:
                                            https://www.azul.com/downloads/zulu-community/?version=java-11-lts&amp;package=jdk
                                        </message>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
